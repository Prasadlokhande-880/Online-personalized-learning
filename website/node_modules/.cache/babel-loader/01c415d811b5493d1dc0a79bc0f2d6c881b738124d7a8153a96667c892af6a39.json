{"ast":null,"code":"/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh;\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh(reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since'];\n  var noneMatch = reqHeaders['if-none-match'];\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false;\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control'];\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false;\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag'];\n    if (!etag) {\n      return false;\n    }\n    var etagStale = true;\n    var matches = parseTokenList(noneMatch);\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i];\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false;\n        break;\n      }\n    }\n    if (etagStale) {\n      return false;\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified'];\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince));\n    if (modifiedStale) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate(date) {\n  var timestamp = date && Date.parse(date);\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number' ? timestamp : NaN;\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList(str) {\n  var end = 0;\n  var list = [];\n  var start = 0;\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20:\n        /*   */\n        if (start === end) {\n          start = end = i + 1;\n        }\n        break;\n      case 0x2c:\n        /* , */\n        list.push(str.substring(start, end));\n        start = end = i + 1;\n        break;\n      default:\n        end = i + 1;\n        break;\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end));\n  return list;\n}","map":{"version":3,"names":["CACHE_CONTROL_NO_CACHE_REGEXP","module","exports","fresh","reqHeaders","resHeaders","modifiedSince","noneMatch","cacheControl","test","etag","etagStale","matches","parseTokenList","i","length","match","lastModified","modifiedStale","parseHttpDate","date","timestamp","Date","parse","NaN","str","end","list","start","len","charCodeAt","push","substring"],"sources":["/Users/prasadlokhande/Documents/GitHub/Online-personalized-learning/website/node_modules/fresh/index.js"],"sourcesContent":["/*!\n * fresh\n * Copyright(c) 2012 TJ Holowaychuk\n * Copyright(c) 2016-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * RegExp to check for no-cache token in Cache-Control.\n * @private\n */\n\nvar CACHE_CONTROL_NO_CACHE_REGEXP = /(?:^|,)\\s*?no-cache\\s*?(?:,|$)/\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = fresh\n\n/**\n * Check freshness of the response using request and response headers.\n *\n * @param {Object} reqHeaders\n * @param {Object} resHeaders\n * @return {Boolean}\n * @public\n */\n\nfunction fresh (reqHeaders, resHeaders) {\n  // fields\n  var modifiedSince = reqHeaders['if-modified-since']\n  var noneMatch = reqHeaders['if-none-match']\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) {\n    return false\n  }\n\n  // Always return stale when Cache-Control: no-cache\n  // to support end-to-end reload requests\n  // https://tools.ietf.org/html/rfc2616#section-14.9.4\n  var cacheControl = reqHeaders['cache-control']\n  if (cacheControl && CACHE_CONTROL_NO_CACHE_REGEXP.test(cacheControl)) {\n    return false\n  }\n\n  // if-none-match\n  if (noneMatch && noneMatch !== '*') {\n    var etag = resHeaders['etag']\n\n    if (!etag) {\n      return false\n    }\n\n    var etagStale = true\n    var matches = parseTokenList(noneMatch)\n    for (var i = 0; i < matches.length; i++) {\n      var match = matches[i]\n      if (match === etag || match === 'W/' + etag || 'W/' + match === etag) {\n        etagStale = false\n        break\n      }\n    }\n\n    if (etagStale) {\n      return false\n    }\n  }\n\n  // if-modified-since\n  if (modifiedSince) {\n    var lastModified = resHeaders['last-modified']\n    var modifiedStale = !lastModified || !(parseHttpDate(lastModified) <= parseHttpDate(modifiedSince))\n\n    if (modifiedStale) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Parse an HTTP Date into a number.\n *\n * @param {string} date\n * @private\n */\n\nfunction parseHttpDate (date) {\n  var timestamp = date && Date.parse(date)\n\n  // istanbul ignore next: guard against date.js Date.parse patching\n  return typeof timestamp === 'number'\n    ? timestamp\n    : NaN\n}\n\n/**\n * Parse a HTTP token list.\n *\n * @param {string} str\n * @private\n */\n\nfunction parseTokenList (str) {\n  var end = 0\n  var list = []\n  var start = 0\n\n  // gather tokens\n  for (var i = 0, len = str.length; i < len; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1\n        }\n        break\n      case 0x2c: /* , */\n        list.push(str.substring(start, end))\n        start = end = i + 1\n        break\n      default:\n        end = i + 1\n        break\n    }\n  }\n\n  // final token\n  list.push(str.substring(start, end))\n\n  return list\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}