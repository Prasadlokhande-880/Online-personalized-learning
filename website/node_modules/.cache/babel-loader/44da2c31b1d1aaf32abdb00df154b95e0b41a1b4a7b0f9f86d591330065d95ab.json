{"ast":null,"code":"/* eslint-disable node/no-deprecated-api */\n\n'use strict';\n\nvar buffer = require('buffer');\nvar Buffer = buffer.Buffer;\nvar safer = {};\nvar key;\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue;\n  if (key === 'SlowBuffer' || key === 'Buffer') continue;\n  safer[key] = buffer[key];\n}\nvar Safer = safer.Buffer = {};\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue;\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue;\n  Safer[key] = Buffer[key];\n}\nsafer.Buffer.prototype = Buffer.prototype;\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value);\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value);\n    }\n    return Buffer(value, encodingOrOffset, length);\n  };\n}\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size);\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"');\n    }\n    var buf = Buffer(size);\n    if (!fill || fill.length === 0) {\n      buf.fill(0);\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding);\n    } else {\n      buf.fill(fill);\n    }\n    return buf;\n  };\n}\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength;\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  };\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength;\n  }\n}\nmodule.exports = safer;","map":{"version":3,"names":["buffer","require","Buffer","safer","key","hasOwnProperty","Safer","prototype","from","Uint8Array","value","encodingOrOffset","length","TypeError","alloc","size","fill","encoding","RangeError","buf","kStringMaxLength","process","binding","e","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","module","exports"],"sources":["/Users/prasadlokhande/Documents/GitHub/Online-personalized-learning/website/node_modules/safer-buffer/safer.js"],"sourcesContent":["/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}