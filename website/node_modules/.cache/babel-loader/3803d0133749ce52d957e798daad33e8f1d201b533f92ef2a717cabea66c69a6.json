{"ast":null,"code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\nvar Buffer = require('safe-buffer').Buffer;\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({\n  weak: false\n});\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({\n  weak: true\n});\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function (path) {\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten, 'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function (type) {\n  return ~type.indexOf('/') ? acceptParams(type) : {\n    value: mime.lookup(type),\n    params: {}\n  };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function (types) {\n  var ret = [];\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition, 'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = {\n    value: parts[0],\n    quality: 1,\n    params: {},\n    originalIndex: index\n  };\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function (val) {\n  var fn;\n  if (typeof val === 'function') {\n    return val;\n  }\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n  return fn;\n};\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n  if (typeof val === 'function') {\n    return val;\n  }\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n  return fn;\n};\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function (val) {\n  if (typeof val === 'function') return val;\n  if (val === true) {\n    // Support plain true/false\n    return function () {\n      return true;\n    };\n  }\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function (a, i) {\n      return i < val;\n    };\n  }\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(',').map(function (v) {\n      return v.trim();\n    });\n  }\n  return proxyaddr.compile(val || []);\n};\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator(options) {\n  return function generateETag(body, encoding) {\n    var buf = !Buffer.isBuffer(body) ? Buffer.from(body, encoding) : body;\n    return etag(buf, options);\n  };\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}","map":{"version":3,"names":["Buffer","require","contentDisposition","contentType","deprecate","flatten","mime","etag","proxyaddr","qs","querystring","exports","createETagGenerator","weak","wetag","isAbsolute","path","substring","function","normalizeType","type","indexOf","acceptParams","value","lookup","params","normalizeTypes","types","ret","i","length","push","str","index","parts","split","quality","originalIndex","pms","parseFloat","compileETag","val","fn","TypeError","compileQueryParser","parse","newObject","parseExtendedQueryString","compileTrust","a","map","v","trim","compile","setCharset","charset","parsed","parameters","format","options","generateETag","body","encoding","buf","isBuffer","from","allowPrototypes"],"sources":["/Users/prasadlokhande/Documents/GitHub/Online-personalized-learning/website/node_modules/express/lib/utils.js"],"sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @api private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar contentDisposition = require('content-disposition');\nvar contentType = require('content-type');\nvar deprecate = require('depd')('express');\nvar flatten = require('array-flatten');\nvar mime = require('send').mime;\nvar etag = require('etag');\nvar proxyaddr = require('proxy-addr');\nvar qs = require('qs');\nvar querystring = require('querystring');\n\n/**\n * Return strong ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.etag = createETagGenerator({ weak: false })\n\n/**\n * Return weak ETag for `body`.\n *\n * @param {String|Buffer} body\n * @param {String} [encoding]\n * @return {String}\n * @api private\n */\n\nexports.wetag = createETagGenerator({ weak: true })\n\n/**\n * Check if `path` looks absolute.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nexports.isAbsolute = function(path){\n  if ('/' === path[0]) return true;\n  if (':' === path[1] && ('\\\\' === path[2] || '/' === path[2])) return true; // Windows device path\n  if ('\\\\\\\\' === path.substring(0, 2)) return true; // Microsoft Azure absolute path\n};\n\n/**\n * Flatten the given `arr`.\n *\n * @param {Array} arr\n * @return {Array}\n * @api private\n */\n\nexports.flatten = deprecate.function(flatten,\n  'utils.flatten: use array-flatten npm module instead');\n\n/**\n * Normalize the given `type`, for example \"html\" becomes \"text/html\".\n *\n * @param {String} type\n * @return {Object}\n * @api private\n */\n\nexports.normalizeType = function(type){\n  return ~type.indexOf('/')\n    ? acceptParams(type)\n    : { value: mime.lookup(type), params: {} };\n};\n\n/**\n * Normalize `types`, for example \"html\" becomes \"text/html\".\n *\n * @param {Array} types\n * @return {Array}\n * @api private\n */\n\nexports.normalizeTypes = function(types){\n  var ret = [];\n\n  for (var i = 0; i < types.length; ++i) {\n    ret.push(exports.normalizeType(types[i]));\n  }\n\n  return ret;\n};\n\n/**\n * Generate Content-Disposition header appropriate for the filename.\n * non-ascii filenames are urlencoded and a filename* parameter is added\n *\n * @param {String} filename\n * @return {String}\n * @api private\n */\n\nexports.contentDisposition = deprecate.function(contentDisposition,\n  'utils.contentDisposition: use content-disposition npm module instead');\n\n/**\n * Parse accept params `str` returning an\n * object with `.value`, `.quality` and `.params`.\n * also includes `.originalIndex` for stable sorting\n *\n * @param {String} str\n * @param {Number} index\n * @return {Object}\n * @api private\n */\n\nfunction acceptParams(str, index) {\n  var parts = str.split(/ *; */);\n  var ret = { value: parts[0], quality: 1, params: {}, originalIndex: index };\n\n  for (var i = 1; i < parts.length; ++i) {\n    var pms = parts[i].split(/ *= */);\n    if ('q' === pms[0]) {\n      ret.quality = parseFloat(pms[1]);\n    } else {\n      ret.params[pms[0]] = pms[1];\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compile \"etag\" value to function.\n *\n * @param  {Boolean|String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileETag = function(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'weak':\n      fn = exports.wetag;\n      break;\n    case false:\n      break;\n    case 'strong':\n      fn = exports.etag;\n      break;\n    default:\n      throw new TypeError('unknown value for etag function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"query parser\" value to function.\n *\n * @param  {String|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileQueryParser = function compileQueryParser(val) {\n  var fn;\n\n  if (typeof val === 'function') {\n    return val;\n  }\n\n  switch (val) {\n    case true:\n    case 'simple':\n      fn = querystring.parse;\n      break;\n    case false:\n      fn = newObject;\n      break;\n    case 'extended':\n      fn = parseExtendedQueryString;\n      break;\n    default:\n      throw new TypeError('unknown value for query parser function: ' + val);\n  }\n\n  return fn;\n}\n\n/**\n * Compile \"proxy trust\" value to function.\n *\n * @param  {Boolean|String|Number|Array|Function} val\n * @return {Function}\n * @api private\n */\n\nexports.compileTrust = function(val) {\n  if (typeof val === 'function') return val;\n\n  if (val === true) {\n    // Support plain true/false\n    return function(){ return true };\n  }\n\n  if (typeof val === 'number') {\n    // Support trusting hop count\n    return function(a, i){ return i < val };\n  }\n\n  if (typeof val === 'string') {\n    // Support comma-separated values\n    val = val.split(',')\n      .map(function (v) { return v.trim() })\n  }\n\n  return proxyaddr.compile(val || []);\n}\n\n/**\n * Set the charset in a given Content-Type string.\n *\n * @param {String} type\n * @param {String} charset\n * @return {String}\n * @api private\n */\n\nexports.setCharset = function setCharset(type, charset) {\n  if (!type || !charset) {\n    return type;\n  }\n\n  // parse type\n  var parsed = contentType.parse(type);\n\n  // set charset\n  parsed.parameters.charset = charset;\n\n  // format type\n  return contentType.format(parsed);\n};\n\n/**\n * Create an ETag generator function, generating ETags with\n * the given options.\n *\n * @param {object} options\n * @return {function}\n * @private\n */\n\nfunction createETagGenerator (options) {\n  return function generateETag (body, encoding) {\n    var buf = !Buffer.isBuffer(body)\n      ? Buffer.from(body, encoding)\n      : body\n\n    return etag(buf, options)\n  }\n}\n\n/**\n * Parse an extended query string with qs.\n *\n * @return {Object}\n * @private\n */\n\nfunction parseExtendedQueryString(str) {\n  return qs.parse(str, {\n    allowPrototypes: true\n  });\n}\n\n/**\n * Return new empty object.\n *\n * @return {Object}\n * @api private\n */\n\nfunction newObject() {\n  return {};\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}